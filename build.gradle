buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

version = mod_version
group = mod_group
archivesBaseName = mod_id

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: mappings_channel, version: mappings_version
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-torg.spongepowered.asm.launch.MixinTweaker'
        }
    }
}

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url 'https://maven.cleanroommc.com' }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    annotationProcessor 'org.ow2.asm:asm-debug-all:5.2'
    annotationProcessor 'com.google.guava:guava:32.1.2-jre'
    annotationProcessor 'com.google.code.gson:gson:2.8.9'

    // ForgeGradle:

    def s = 'zone.rong:mixinbooter:8.8'
    implementation(s) {
        transitive = false
    }
    annotationProcessor(s) {
        transitive = false
    }
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly files('libs/LoliPickaxe-1.2.16f_V3_traducao_versao_santificada_brasileira_que_nao_veio_da-deepweb_chinesa.jar')
    compileOnly files('libs/RedstoneFlux-1.12-2.1.1.1-universal.jar')
    compileOnly files('libs/Botania+r1.10-364.4.jar')
    compileOnly files('libs/Draconic-Evolution-1.12.2-2.3.28.193-deobf.jar')
    compileOnly files('libs/BrandonsCore-1.12.2-2.4.20.22-deobf.jar')
    implementation files('libs/!mixinbooter-8.6.jar')
    compileOnly files('libs/AbyssalCraft-1.12.2-1.10.4.jar')
    compileOnly files('libs/iceandfire-1.9.1-1.12.2.jar')
    implementation files('libs/FantasticLib-1.12.2.047d.jar')
    compileOnly files('libs/crazymonsters-1.12.2-1.0.jar')
    compileOnly files('libs/ChaosWither0.6.6.2.jar')
    compileOnly files('libs/Players Ultimate Weapon 1.12.2 - 1.0.1..jar')
    embed('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}
sourceSets { main { output.resourcesDir = output.classesDir } }
processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft_version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': mod_id, 'mod_name': mod_name, 'version': project.version,
                'mcversion': minecraft_version, 'mod_description': mod_description
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, mod_mixin_refmap.replace('${mod_id}', mod_id)
    config mod_mixin_configs.replace('${mod_id}', mod_id)
}

jar {
    from {
        configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes "ForceLoadAsMod": "true"
        attributes "TweakClass": "org.spongepowered.asm.launch.MixinTweaker"
        attributes "TweakOrder": "0"
    }
}

jar.finalizedBy('reobfJar')
